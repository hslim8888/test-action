name: Create Release
on:
  push:
    tags:
      - 'trigger*'

jobs:
  release:
#    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Get triggered tag and hash
        id: get_tag
        run: |
          echo ::set-output name=tag::$(git describe --tags --abbrev=0 | grep trigger)
          echo ::set-output name=commit::$(git rev-list -n 1 ${{ steps.get_tag.outputs.tag }})

      - name: print tag and hash
        run: |
          echo ${{ steps.get_tag.outputs.tag }}
          echo ${{ steps.get_tag.outputs.commit }}

      - name: Get latest released tag
        id: get_latest_tag
        run: |
          echo ::set-output name=released-tag::$(git tag --sort=-creatordate --merged main | grep -v trigger | sed -n 1p)
      - name: Get hash of latest released tag
        if: ${{ steps.get_latest_tag.outputs.released-tag != '' }}
        run: |
          echo ::set-output name=released-commit::$(git rev-list -n 1 ${{ steps.get_latest_tag.outputs.released-tag }})

      - name: print latest released tag and hash
        if: ${{ steps.get_latest_tag.outputs.released-tag != '' }}
        run: |
          echo ${{ steps.get_latest_tag.outputs.released-tag }}
          echo ${{ steps.get_latest_tag.outputs.released-commit }} 
      
      # tag format: trigger-ecs|worker-{timestamp}-{username}
      - name: New released Tag
        id: new_tag
        run: |
          echo ::set-output name=username::$(echo ${{ steps.get_tag.outputs.tag }} | cut -d'-' -f4)
          echo ::set-output name=tag::$(echo ${{ steps.get_tag.outputs.tag }} | cut -d'-' -f2-3)
      - name: print new tag
        run: |
          echo ${{ steps.new_tag.outputs.tag }}
          echo ${{ steps.new_tag.outputs.username }}

      - name: Get commit lists between lasplit_tagtest released tag and new tag
        if: ${{ steps.get_latest_tag.outputs.released-tag != '' }}
        id: get_commit_lists
        run: |
          echo ::set-output name=commit-lists::$(git log --pretty=format:"%s @%an - [%h](https://github.com/hslim8888/test-action/commit/%h)" ${{ steps.get_latest_tag.outputs.released-commit }}..${{ steps.get_tag.outputs.commit }})

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.new_tag.outputs.tag }}
          name: Release ${{ steps.new_tag.outputs.tag }}
          body: >
            [compare link](https://github.com/hslim8888/test-action/compare/${{ steps.get_latest_tag.outputs.released-tag }}...${{ steps.new_tag.outputs.tag }})) 
            ${{ steps.get_commit_lists.outputs.commit-lists || ''}}
            deploy by @${{ steps.new_tag.outputs.username }}
